<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>title</key>
		<string>基础</string>
		<key>rows</key>
		<array>
			<dict>
				<key>title</key>
				<string>NSNotification</string>
				<key>detail</key>
				<string>NSNotification是iOS中一个调度消息通知的类，采用单例模式设计，在程序中实现传值、回调等地方应用很广。</string>
				<key>explain</key>
				<string>NSNotification采用单例的设计模式,如果没关系就用通知.,通知是多对多,而且发送的只管发送,接收的只管接收。当需要跨越多个控制器进行传值的时候,notification是一个最方便的选择,使用完毕需要及时注销。</string>
				<key>sampleClass</key>
				<string>NotificationViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>JavaScriptCore</string>
				<key>detail</key>
				<string>JavaScriptCore框架其实只是基于webkit中以C/C++实现的JavaScriptCore的一个包装，该框架让Objective-C和JavaScript代码直接的交互变得更加的简单方便。</string>
				<key>explain</key>
				<string>JSContext

JS执行的环境，同时也通过JSVirtualMachine管理着所有对象的生命周期，每个JSValue都和JSContext相关联并且强引用context。

JSValue

JS对象在JSVirtualMachine中的一个强引用，其实就是Hybird对象。我们对JS的操作都是通过它。并且每个JSValue都是强引用一个context。同时，OC和JS对象之间的转换也是通过它。

JSManagedValue

JS和OC对象的内存管理辅助对象。由于JS内存管理是垃圾回收，并且JS中的对象都是强引用，而OC是引用计数。如果双方相互引用，势必会造成循环引用，而导致内存泄露。我们可以用JSManagedValue保存JSValue来避免。

JSVirtualMachine

JS运行的虚拟机，有独立的堆空间和垃圾回收机制。

JSExport

一个协议，如果JS对象想直接调用OC对象里面的方法和属性，那么这个OC对象只要实现这个JSExport协议就可以了。</string>
				<key>sampleClass</key>
				<string>JavaScriptCoreViewController</string>
			</dict>
		</array>
	</dict>
	<dict>
		<key>title</key>
		<string>运行时</string>
		<key>rows</key>
		<array/>
	</dict>
	<dict>
		<key>title</key>
		<string>GCD</string>
		<key>rows</key>
		<array/>
	</dict>
	<dict>
		<key>title</key>
		<string>算法</string>
		<key>rows</key>
		<array>
			<dict>
				<key>title</key>
				<string>冒泡排序</string>
				<key>detail</key>
				<string>冒泡排序遍历若干次要排序的数列，每次遍历时，都会从前往后依次的比较相邻两个数的大小；然后按照升降序规则判断是否交换它们的位置。</string>
				<key>explain</key>
				<string></string>
				<key>sampleClass</key>
				<string>BubbleSortViewController</string>
			</dict>
		</array>
	</dict>
</array>
</plist>
