<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>title</key>
		<string>基础</string>
		<key>rows</key>
		<array>
			<dict>
				<key>title</key>
				<string>NSNotification</string>
				<key>detail</key>
				<string>NSNotification是iOS中一个调度消息通知的类，采用单例模式设计，在程序中实现传值、回调等地方应用很广。</string>
				<key>explain</key>
				<string>NSNotification采用单例的设计模式,如果没关系就用通知.,通知是多对多,而且发送的只管发送,接收的只管接收。当需要跨越多个控制器进行传值的时候,notification是一个最方便的选择,使用完毕需要及时注销。</string>
				<key>sampleClass</key>
				<string>NotificationViewController</string>
			</dict>
			<dict>
				<key>net</key>
				<true/>
				<key>title</key>
				<string>JavaScriptCore</string>
				<key>detail</key>
				<string>JavaScriptCore框架其实只是基于webkit中以C/C++实现的JavaScriptCore的一个包装，该框架让Objective-C和JavaScript代码直接的交互变得更加的简单方便。</string>
				<key>explain</key>
				<string>https://www.jianshu.com/p/f04746624dfc</string>
				<key>sampleClass</key>
				<string>JavaScriptCoreViewController</string>
			</dict>
			<dict>
				<key>net</key>
				<true/>
				<key>title</key>
				<string>WKWebView</string>
				<key>detail</key>
				<string>JavaScriptCore框架其实只是基于webkit中以C/C++实现的JavaScriptCore的一个包装，该框架让Objective-C和JavaScript代码直接的交互变得更加的简单方便。</string>
				<key>explain</key>
				<string>https://www.jianshu.com/p/5cf0d241ae12/</string>
				<key>sampleClass</key>
				<string>WKWebViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>国际化</string>
				<key>detail</key>
				<string>这里就文本，APP名称、启动图国际化做示例。</string>
				<key>explain</key>
				<string>iOS 国际化.html</string>
				<key>sampleClass</key>
				<string>LocalizationViewController</string>
			</dict>
		</array>
	</dict>
	<dict>
		<key>title</key>
		<string>运行时</string>
		<key>rows</key>
		<array/>
	</dict>
	<dict>
		<key>title</key>
		<string>GCD</string>
		<key>rows</key>
		<array>
			<dict>
				<key>title</key>
				<string>基础</string>
				<key>detail</key>
				<string>CGD是异步执行任务的技术之一，一般将引用程序中记述的线程管理用的代码在系统级中实现。</string>
				<key>explain</key>
				<string>GCD基础.html</string>
				<key>sampleClass</key>
				<string>GCDBasicViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>dispatch_set_target_queue</string>
				<key>detail</key>
				<string>dispatch_queue_create函数生成的Dispatch Queue都使用与默认优先级Global Dispatch Queue相同执行优先级的线程。</string>
				<key>explain</key>
				<string>dispatch_set_target_queue.html</string>
			</dict>
			<dict>
				<key>title</key>
				<string>Dispatch Group</string>
				<key>detail</key>
				<string>Dispatch Group用于监视一批处理的结束，一旦检测到所有处理结束，就会将结果处理追加到Dispatch Queue中。</string>
				<key>explain</key>
				<string>Dispatch Group.html</string>
				<key>sampleClass</key>
				<string>DispatchGroupViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>Dispatch Semaphore</string>
				<key>detail</key>
				<string>Dispatch Semaphore是持有计数的信号，该计数是多线程编程中的计数类型信号。是用更细粒度的对象实现排他控制。</string>
				<key>explain</key>
				<string>Dispatch Semaphore.html</string>
				<key>sampleClass</key>
				<string>DispatchSemaphoreViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>其他</string>
				<key>detail</key>
				<string>GCD其他函数介绍</string>
				<key>explain</key>
				<string>GCD 其他.html</string>
			</dict>
		</array>
	</dict>
	<dict>
		<key>title</key>
		<string>加解密</string>
		<key>rows</key>
		<array>
			<dict>
				<key>title</key>
				<string>MD5</string>
				<key>detail</key>
				<string>是一种对不同的数据加密的结果是定长的32位字符的不可逆加密算法。</string>
				<key>explain</key>
				<string>MD5.html</string>
				<key>sampleClass</key>
				<string>MD5ViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>对称加密AES</string>
				<key>detail</key>
				<string>对称加密算法又称传统加密算法。 加密和解密使用同一个密钥。</string>
				<key>explain</key>
				<string>对称加密AES.html</string>
				<key>sampleClass</key>
				<string>AESViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>非对称加密RSA</string>
				<key>detail</key>
				<string>非对称加密是计算机通信安全的基石，保证了加密数据不会被破解。</string>
				<key>explain</key>
				<string>非对称加密RSA.html</string>
				<key>sampleClass</key>
				<string>RSAViewController</string>
			</dict>
		</array>
	</dict>
	<dict>
		<key>title</key>
		<string>算法</string>
		<key>rows</key>
		<array>
			<dict>
				<key>title</key>
				<string>冒泡排序</string>
				<key>detail</key>
				<string>冒泡排序遍历若干次要排序的数列，每次遍历时，都会从前往后依次的比较相邻两个数的大小；然后按照升降序规则判断是否交换它们的位置。</string>
				<key>explain</key>
				<string>BubbleSort.html</string>
				<key>sampleClass</key>
				<string>BubbleSortViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>选择排序</string>
				<key>detail</key>
				<string>每次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。</string>
				<key>explain</key>
				<string>SelectionSort.html</string>
				<key>sampleClass</key>
				<string>SelectionSortViewController</string>
			</dict>
			<dict>
				<key>title</key>
				<string>快速排序</string>
				<key>detail</key>
				<string>通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</string>
				<key>explain</key>
				<string>QuickSort.html</string>
			</dict>
			<dict>
				<key>title</key>
				<string>二分查找</string>
				<key>detail</key>
				<string>二分查找也称折半查找（Binary Search），它是一种效率较高的查找方法。但是，折半查找要求线性表必须采用顺序存储结构，而且表中元素按关键字有序排列。</string>
				<key>explain</key>
				<string>BinarySearch.html</string>
			</dict>
			<dict>
				<key>title</key>
				<string>单向链表</string>
				<key>detail</key>
				<string>单向链表是一堆数据被存放到不连续的内存空间，但每组数据都会有一个变量指向下一组数据的地址(指针)，以此来连接起来。</string>
				<key>explain</key>
				<string>单向链表.html</string>
				<key>sampleClass</key>
				<string>LinkListViewController</string>
			</dict>
		</array>
	</dict>
</array>
</plist>
